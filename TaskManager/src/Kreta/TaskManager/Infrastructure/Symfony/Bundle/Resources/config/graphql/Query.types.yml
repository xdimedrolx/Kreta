# This file is part of the Kreta package.
#
# (c) Beñat Espiña <benatespina@gmail.com>
# (c) Gorka Laucirica <gorka.lauzirika@gmail.com>
#
# For the full copyright and license information, please view the LICENSE
# file that was distributed with this source code.

# This implements the following type system shorthand:
#
#   type Query {
#     organizations($name: String, $first: Int, $last: Int, $before: String, $after: String) : OrganizationConnection
#     organization($id: ID) : Organization
#     organization($slug: String) : Organization
#
#     organizationMember($organizationId: ID!, $organizationMemberId: ID!) : OrganizationMember
#     owner($organizationId: ID!, $ownerId: ID!) : Owner
#
#     projects($organizationId: ID, $name: String, $first: Int, $last: Int, $before: String, $after: String) : ProjectConnection
#     project($id: ID) : Project
#     project($slug: String, $organizationSlug: String) : Project
#
#     tasks($projectId: ID, $parentId: ID, $assigneeId: ID, $creatorId: ID, $title: String, $priority: TaskPriority, $progress: TaskProgress, $first: Int, $last: Int, $before: String, $after: String) : TaskConnection
#     task($id: ID!) : Task
#   }

Query:
    type: object
    config:
        description: "Kreta, modern project management solution"
        fields:
            node:
                builder: Node
                builderConfig:
                    nodeInterfaceType: Node
                    idFetcher: '@=resolver("node", [value])'
            organizations:
                type: "OrganizationConnection"
                description: "The paginate list of organization that can be filter by name"
                args:
                    organizationConnectionInput:
                        description: "Input object that wraps complex filter requirements of organization connection"
                        type: "OrganizationConnectionInput"
                resolve: '@=resolver("organizations", [args])'
            organization:
                type: "Organization"
                args:
                    id:
                        description: "id of the organization"
                        type: "ID"
                    slug:
                        description: "slug of the organization"
                        type: "String"
                resolve: "@=resolver('organization', [args])"
            organizationMember:
                type: "OrganizationMember"
                args:
                    organizationId:
                        description: "id of the organization"
                        type: "ID!"
                    organizationMemberId:
                        description: "id of the user that want to find as organization member"
                        type: "ID!"
                resolve: "@=resolver('member_organization_member', [args])"
            owner:
                type: "Owner"
                args:
                    organizationId:
                        description: "id of the organization"
                        type: "ID!"
                    ownerId:
                        description: "id of the user that want to find as owner"
                        type: "ID!"
                resolve: "@=resolver('member_owner', [args])"
            projects:
                type: "ProjectConnection"
                description: "The paginate list of project that can be filter by name and organization id"
                args:
                    projectConnectionInput:
                        description: "Input object that wraps complex filter requirements of project connection"
                        type: "ProjectConnectionInput"
                resolve: '@=resolver("projects", [args])'
            project:
                type: "Project"
                args:
                    id:
                        description: "id of the project"
                        type: "ID"
                    projectInput:
                        description: "Input object that wraps project by slug query requirements"
                        type: "ProjectInput"
                resolve: "@=resolver('project', [args])"
            tasks:
                type: "TaskConnection"
                description: "The paginate list of task that can be filter by title, project id, parent task id, assignee id, creator id, priority and progress"
                args:
                    taskConnectionInput:
                        description: "Input object that wraps complex filter requirements of task connection"
                        type: "TaskConnectionInput"
                resolve: '@=resolver("tasks", [args])'
            task:
                type: "Task"
                args:
                    id:
                        description: "id of the task"
                        type: "ID!"
                resolve: "@=resolver('task', [args])"
